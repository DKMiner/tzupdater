// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: country_zones_file.proto

package com.android.libcore.timezone.countryzones.proto;

public final class CountryZonesFile {
  private CountryZonesFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CountryZonesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.libcore.timezone.countryzones.proto.CountryZones)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string ianaVersion = 1;</code>
     * @return Whether the ianaVersion field is set.
     */
    boolean hasIanaVersion();
    /**
     * <code>required string ianaVersion = 1;</code>
     * @return The ianaVersion.
     */
    java.lang.String getIanaVersion();
    /**
     * <code>required string ianaVersion = 1;</code>
     * @return The bytes for ianaVersion.
     */
    com.google.protobuf.ByteString
        getIanaVersionBytes();

    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> 
        getCountriesList();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getCountries(int index);
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    int getCountriesCount();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder> 
        getCountriesOrBuilderList();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder getCountriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.CountryZones}
   */
  public static final class CountryZones extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.libcore.timezone.countryzones.proto.CountryZones)
      CountryZonesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CountryZones.newBuilder() to construct.
    private CountryZones(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CountryZones() {
      ianaVersion_ = "";
      countries_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CountryZones();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.Builder.class);
    }

    private int bitField0_;
    public static final int IANAVERSION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ianaVersion_ = "";
    /**
     * <code>required string ianaVersion = 1;</code>
     * @return Whether the ianaVersion field is set.
     */
    @java.lang.Override
    public boolean hasIanaVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string ianaVersion = 1;</code>
     * @return The ianaVersion.
     */
    @java.lang.Override
    public java.lang.String getIanaVersion() {
      java.lang.Object ref = ianaVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ianaVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ianaVersion = 1;</code>
     * @return The bytes for ianaVersion.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIanaVersionBytes() {
      java.lang.Object ref = ianaVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ianaVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COUNTRIES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> countries_;
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> getCountriesList() {
      return countries_;
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder> 
        getCountriesOrBuilderList() {
      return countries_;
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    @java.lang.Override
    public int getCountriesCount() {
      return countries_.size();
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getCountries(int index) {
      return countries_.get(index);
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
     */
    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder getCountriesOrBuilder(
        int index) {
      return countries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIanaVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCountriesCount(); i++) {
        if (!getCountries(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ianaVersion_);
      }
      for (int i = 0; i < countries_.size(); i++) {
        output.writeMessage(2, countries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ianaVersion_);
      }
      for (int i = 0; i < countries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, countries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones)) {
        return super.equals(obj);
      }
      com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones other = (com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones) obj;

      if (hasIanaVersion() != other.hasIanaVersion()) return false;
      if (hasIanaVersion()) {
        if (!getIanaVersion()
            .equals(other.getIanaVersion())) return false;
      }
      if (!getCountriesList()
          .equals(other.getCountriesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIanaVersion()) {
        hash = (37 * hash) + IANAVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getIanaVersion().hashCode();
      }
      if (getCountriesCount() > 0) {
        hash = (37 * hash) + COUNTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getCountriesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.CountryZones}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.libcore.timezone.countryzones.proto.CountryZones)
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZonesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.Builder.class);
      }

      // Construct using com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ianaVersion_ = "";
        if (countriesBuilder_ == null) {
          countries_ = java.util.Collections.emptyList();
        } else {
          countries_ = null;
          countriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones getDefaultInstanceForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones build() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones buildPartial() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones result = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones result) {
        if (countriesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            countries_ = java.util.Collections.unmodifiableList(countries_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.countries_ = countries_;
        } else {
          result.countries_ = countriesBuilder_.build();
        }
      }

      private void buildPartial0(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ianaVersion_ = ianaVersion_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones) {
          return mergeFrom((com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones other) {
        if (other == com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones.getDefaultInstance()) return this;
        if (other.hasIanaVersion()) {
          ianaVersion_ = other.ianaVersion_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (countriesBuilder_ == null) {
          if (!other.countries_.isEmpty()) {
            if (countries_.isEmpty()) {
              countries_ = other.countries_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCountriesIsMutable();
              countries_.addAll(other.countries_);
            }
            onChanged();
          }
        } else {
          if (!other.countries_.isEmpty()) {
            if (countriesBuilder_.isEmpty()) {
              countriesBuilder_.dispose();
              countriesBuilder_ = null;
              countries_ = other.countries_;
              bitField0_ = (bitField0_ & ~0x00000002);
              countriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCountriesFieldBuilder() : null;
            } else {
              countriesBuilder_.addAllMessages(other.countries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIanaVersion()) {
          return false;
        }
        for (int i = 0; i < getCountriesCount(); i++) {
          if (!getCountries(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                ianaVersion_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country m =
                    input.readMessage(
                        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.PARSER,
                        extensionRegistry);
                if (countriesBuilder_ == null) {
                  ensureCountriesIsMutable();
                  countries_.add(m);
                } else {
                  countriesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object ianaVersion_ = "";
      /**
       * <code>required string ianaVersion = 1;</code>
       * @return Whether the ianaVersion field is set.
       */
      public boolean hasIanaVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string ianaVersion = 1;</code>
       * @return The ianaVersion.
       */
      public java.lang.String getIanaVersion() {
        java.lang.Object ref = ianaVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ianaVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ianaVersion = 1;</code>
       * @return The bytes for ianaVersion.
       */
      public com.google.protobuf.ByteString
          getIanaVersionBytes() {
        java.lang.Object ref = ianaVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ianaVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ianaVersion = 1;</code>
       * @param value The ianaVersion to set.
       * @return This builder for chaining.
       */
      public Builder setIanaVersion(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ianaVersion_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required string ianaVersion = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIanaVersion() {
        ianaVersion_ = getDefaultInstance().getIanaVersion();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>required string ianaVersion = 1;</code>
       * @param value The bytes for ianaVersion to set.
       * @return This builder for chaining.
       */
      public Builder setIanaVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ianaVersion_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> countries_ =
        java.util.Collections.emptyList();
      private void ensureCountriesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          countries_ = new java.util.ArrayList<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country>(countries_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder> countriesBuilder_;

      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> getCountriesList() {
        if (countriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(countries_);
        } else {
          return countriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public int getCountriesCount() {
        if (countriesBuilder_ == null) {
          return countries_.size();
        } else {
          return countriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getCountries(int index) {
        if (countriesBuilder_ == null) {
          return countries_.get(index);
        } else {
          return countriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder setCountries(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.set(index, value);
          onChanged();
        } else {
          countriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder setCountries(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.set(index, builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder addCountries(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.add(value);
          onChanged();
        } else {
          countriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder addCountries(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country value) {
        if (countriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCountriesIsMutable();
          countries_.add(index, value);
          onChanged();
        } else {
          countriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder addCountries(
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.add(builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder addCountries(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder builderForValue) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.add(index, builderForValue.build());
          onChanged();
        } else {
          countriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder addAllCountries(
          java.lang.Iterable<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country> values) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, countries_);
          onChanged();
        } else {
          countriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder clearCountries() {
        if (countriesBuilder_ == null) {
          countries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          countriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public Builder removeCountries(int index) {
        if (countriesBuilder_ == null) {
          ensureCountriesIsMutable();
          countries_.remove(index);
          onChanged();
        } else {
          countriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder getCountriesBuilder(
          int index) {
        return getCountriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder getCountriesOrBuilder(
          int index) {
        if (countriesBuilder_ == null) {
          return countries_.get(index);  } else {
          return countriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder> 
           getCountriesOrBuilderList() {
        if (countriesBuilder_ != null) {
          return countriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(countries_);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder addCountriesBuilder() {
        return getCountriesFieldBuilder().addBuilder(
            com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder addCountriesBuilder(
          int index) {
        return getCountriesFieldBuilder().addBuilder(
            index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.Country countries = 2;</code>
       */
      public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder> 
           getCountriesBuilderList() {
        return getCountriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder> 
          getCountriesFieldBuilder() {
        if (countriesBuilder_ == null) {
          countriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder>(
                  countries_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          countries_ = null;
        }
        return countriesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.libcore.timezone.countryzones.proto.CountryZones)
    }

    // @@protoc_insertion_point(class_scope:com.android.libcore.timezone.countryzones.proto.CountryZones)
    private static final com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones();
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CountryZones>
        PARSER = new com.google.protobuf.AbstractParser<CountryZones>() {
      @java.lang.Override
      public CountryZones parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CountryZones> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CountryZones> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryZones getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CountryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.libcore.timezone.countryzones.proto.Country)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string isoCode = 1;</code>
     * @return Whether the isoCode field is set.
     */
    boolean hasIsoCode();
    /**
     * <code>required string isoCode = 1;</code>
     * @return The isoCode.
     */
    java.lang.String getIsoCode();
    /**
     * <code>required string isoCode = 1;</code>
     * @return The bytes for isoCode.
     */
    com.google.protobuf.ByteString
        getIsoCodeBytes();

    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return Whether the defaultTimeZoneId field is set.
     */
    boolean hasDefaultTimeZoneId();
    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return The defaultTimeZoneId.
     */
    java.lang.String getDefaultTimeZoneId();
    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return The bytes for defaultTimeZoneId.
     */
    com.google.protobuf.ByteString
        getDefaultTimeZoneIdBytes();

    /**
     * <code>optional bool defaultTimeZoneBoost = 3;</code>
     * @return Whether the defaultTimeZoneBoost field is set.
     */
    boolean hasDefaultTimeZoneBoost();
    /**
     * <code>optional bool defaultTimeZoneBoost = 3;</code>
     * @return The defaultTimeZoneBoost.
     */
    boolean getDefaultTimeZoneBoost();

    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> 
        getTimeZoneMappingsList();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getTimeZoneMappings(int index);
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    int getTimeZoneMappingsCount();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder> 
        getTimeZoneMappingsOrBuilderList();
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder getTimeZoneMappingsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.Country}
   */
  public static final class Country extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.libcore.timezone.countryzones.proto.Country)
      CountryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Country.newBuilder() to construct.
    private Country(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Country() {
      isoCode_ = "";
      defaultTimeZoneId_ = "";
      timeZoneMappings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Country();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_Country_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder.class);
    }

    private int bitField0_;
    public static final int ISOCODE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object isoCode_ = "";
    /**
     * <code>required string isoCode = 1;</code>
     * @return Whether the isoCode field is set.
     */
    @java.lang.Override
    public boolean hasIsoCode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string isoCode = 1;</code>
     * @return The isoCode.
     */
    @java.lang.Override
    public java.lang.String getIsoCode() {
      java.lang.Object ref = isoCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          isoCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string isoCode = 1;</code>
     * @return The bytes for isoCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIsoCodeBytes() {
      java.lang.Object ref = isoCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        isoCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULTTIMEZONEID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object defaultTimeZoneId_ = "";
    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return Whether the defaultTimeZoneId field is set.
     */
    @java.lang.Override
    public boolean hasDefaultTimeZoneId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return The defaultTimeZoneId.
     */
    @java.lang.Override
    public java.lang.String getDefaultTimeZoneId() {
      java.lang.Object ref = defaultTimeZoneId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          defaultTimeZoneId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string defaultTimeZoneId = 2;</code>
     * @return The bytes for defaultTimeZoneId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDefaultTimeZoneIdBytes() {
      java.lang.Object ref = defaultTimeZoneId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        defaultTimeZoneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULTTIMEZONEBOOST_FIELD_NUMBER = 3;
    private boolean defaultTimeZoneBoost_ = false;
    /**
     * <code>optional bool defaultTimeZoneBoost = 3;</code>
     * @return Whether the defaultTimeZoneBoost field is set.
     */
    @java.lang.Override
    public boolean hasDefaultTimeZoneBoost() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool defaultTimeZoneBoost = 3;</code>
     * @return The defaultTimeZoneBoost.
     */
    @java.lang.Override
    public boolean getDefaultTimeZoneBoost() {
      return defaultTimeZoneBoost_;
    }

    public static final int TIMEZONEMAPPINGS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> timeZoneMappings_;
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> getTimeZoneMappingsList() {
      return timeZoneMappings_;
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder> 
        getTimeZoneMappingsOrBuilderList() {
      return timeZoneMappings_;
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    @java.lang.Override
    public int getTimeZoneMappingsCount() {
      return timeZoneMappings_.size();
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getTimeZoneMappings(int index) {
      return timeZoneMappings_.get(index);
    }
    /**
     * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
     */
    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder getTimeZoneMappingsOrBuilder(
        int index) {
      return timeZoneMappings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIsoCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTimeZoneMappingsCount(); i++) {
        if (!getTimeZoneMappings(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, isoCode_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, defaultTimeZoneId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, defaultTimeZoneBoost_);
      }
      for (int i = 0; i < timeZoneMappings_.size(); i++) {
        output.writeMessage(4, timeZoneMappings_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, isoCode_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, defaultTimeZoneId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, defaultTimeZoneBoost_);
      }
      for (int i = 0; i < timeZoneMappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, timeZoneMappings_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country)) {
        return super.equals(obj);
      }
      com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country other = (com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country) obj;

      if (hasIsoCode() != other.hasIsoCode()) return false;
      if (hasIsoCode()) {
        if (!getIsoCode()
            .equals(other.getIsoCode())) return false;
      }
      if (hasDefaultTimeZoneId() != other.hasDefaultTimeZoneId()) return false;
      if (hasDefaultTimeZoneId()) {
        if (!getDefaultTimeZoneId()
            .equals(other.getDefaultTimeZoneId())) return false;
      }
      if (hasDefaultTimeZoneBoost() != other.hasDefaultTimeZoneBoost()) return false;
      if (hasDefaultTimeZoneBoost()) {
        if (getDefaultTimeZoneBoost()
            != other.getDefaultTimeZoneBoost()) return false;
      }
      if (!getTimeZoneMappingsList()
          .equals(other.getTimeZoneMappingsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIsoCode()) {
        hash = (37 * hash) + ISOCODE_FIELD_NUMBER;
        hash = (53 * hash) + getIsoCode().hashCode();
      }
      if (hasDefaultTimeZoneId()) {
        hash = (37 * hash) + DEFAULTTIMEZONEID_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultTimeZoneId().hashCode();
      }
      if (hasDefaultTimeZoneBoost()) {
        hash = (37 * hash) + DEFAULTTIMEZONEBOOST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDefaultTimeZoneBoost());
      }
      if (getTimeZoneMappingsCount() > 0) {
        hash = (37 * hash) + TIMEZONEMAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getTimeZoneMappingsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.Country}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.libcore.timezone.countryzones.proto.Country)
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.CountryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_Country_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.Builder.class);
      }

      // Construct using com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        isoCode_ = "";
        defaultTimeZoneId_ = "";
        defaultTimeZoneBoost_ = false;
        if (timeZoneMappingsBuilder_ == null) {
          timeZoneMappings_ = java.util.Collections.emptyList();
        } else {
          timeZoneMappings_ = null;
          timeZoneMappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getDefaultInstanceForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country build() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country buildPartial() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country result = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country result) {
        if (timeZoneMappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            timeZoneMappings_ = java.util.Collections.unmodifiableList(timeZoneMappings_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.timeZoneMappings_ = timeZoneMappings_;
        } else {
          result.timeZoneMappings_ = timeZoneMappingsBuilder_.build();
        }
      }

      private void buildPartial0(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.isoCode_ = isoCode_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.defaultTimeZoneId_ = defaultTimeZoneId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.defaultTimeZoneBoost_ = defaultTimeZoneBoost_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country) {
          return mergeFrom((com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country other) {
        if (other == com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country.getDefaultInstance()) return this;
        if (other.hasIsoCode()) {
          isoCode_ = other.isoCode_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDefaultTimeZoneId()) {
          defaultTimeZoneId_ = other.defaultTimeZoneId_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasDefaultTimeZoneBoost()) {
          setDefaultTimeZoneBoost(other.getDefaultTimeZoneBoost());
        }
        if (timeZoneMappingsBuilder_ == null) {
          if (!other.timeZoneMappings_.isEmpty()) {
            if (timeZoneMappings_.isEmpty()) {
              timeZoneMappings_ = other.timeZoneMappings_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTimeZoneMappingsIsMutable();
              timeZoneMappings_.addAll(other.timeZoneMappings_);
            }
            onChanged();
          }
        } else {
          if (!other.timeZoneMappings_.isEmpty()) {
            if (timeZoneMappingsBuilder_.isEmpty()) {
              timeZoneMappingsBuilder_.dispose();
              timeZoneMappingsBuilder_ = null;
              timeZoneMappings_ = other.timeZoneMappings_;
              bitField0_ = (bitField0_ & ~0x00000008);
              timeZoneMappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTimeZoneMappingsFieldBuilder() : null;
            } else {
              timeZoneMappingsBuilder_.addAllMessages(other.timeZoneMappings_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasIsoCode()) {
          return false;
        }
        for (int i = 0; i < getTimeZoneMappingsCount(); i++) {
          if (!getTimeZoneMappings(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                isoCode_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                defaultTimeZoneId_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                defaultTimeZoneBoost_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping m =
                    input.readMessage(
                        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.PARSER,
                        extensionRegistry);
                if (timeZoneMappingsBuilder_ == null) {
                  ensureTimeZoneMappingsIsMutable();
                  timeZoneMappings_.add(m);
                } else {
                  timeZoneMappingsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object isoCode_ = "";
      /**
       * <code>required string isoCode = 1;</code>
       * @return Whether the isoCode field is set.
       */
      public boolean hasIsoCode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string isoCode = 1;</code>
       * @return The isoCode.
       */
      public java.lang.String getIsoCode() {
        java.lang.Object ref = isoCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            isoCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string isoCode = 1;</code>
       * @return The bytes for isoCode.
       */
      public com.google.protobuf.ByteString
          getIsoCodeBytes() {
        java.lang.Object ref = isoCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          isoCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string isoCode = 1;</code>
       * @param value The isoCode to set.
       * @return This builder for chaining.
       */
      public Builder setIsoCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        isoCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required string isoCode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsoCode() {
        isoCode_ = getDefaultInstance().getIsoCode();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>required string isoCode = 1;</code>
       * @param value The bytes for isoCode to set.
       * @return This builder for chaining.
       */
      public Builder setIsoCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        isoCode_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object defaultTimeZoneId_ = "";
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @return Whether the defaultTimeZoneId field is set.
       */
      public boolean hasDefaultTimeZoneId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @return The defaultTimeZoneId.
       */
      public java.lang.String getDefaultTimeZoneId() {
        java.lang.Object ref = defaultTimeZoneId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            defaultTimeZoneId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @return The bytes for defaultTimeZoneId.
       */
      public com.google.protobuf.ByteString
          getDefaultTimeZoneIdBytes() {
        java.lang.Object ref = defaultTimeZoneId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          defaultTimeZoneId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @param value The defaultTimeZoneId to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultTimeZoneId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        defaultTimeZoneId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultTimeZoneId() {
        defaultTimeZoneId_ = getDefaultInstance().getDefaultTimeZoneId();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string defaultTimeZoneId = 2;</code>
       * @param value The bytes for defaultTimeZoneId to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultTimeZoneIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        defaultTimeZoneId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private boolean defaultTimeZoneBoost_ ;
      /**
       * <code>optional bool defaultTimeZoneBoost = 3;</code>
       * @return Whether the defaultTimeZoneBoost field is set.
       */
      @java.lang.Override
      public boolean hasDefaultTimeZoneBoost() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool defaultTimeZoneBoost = 3;</code>
       * @return The defaultTimeZoneBoost.
       */
      @java.lang.Override
      public boolean getDefaultTimeZoneBoost() {
        return defaultTimeZoneBoost_;
      }
      /**
       * <code>optional bool defaultTimeZoneBoost = 3;</code>
       * @param value The defaultTimeZoneBoost to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultTimeZoneBoost(boolean value) {

        defaultTimeZoneBoost_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool defaultTimeZoneBoost = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultTimeZoneBoost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defaultTimeZoneBoost_ = false;
        onChanged();
        return this;
      }

      private java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> timeZoneMappings_ =
        java.util.Collections.emptyList();
      private void ensureTimeZoneMappingsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          timeZoneMappings_ = new java.util.ArrayList<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping>(timeZoneMappings_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder> timeZoneMappingsBuilder_;

      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> getTimeZoneMappingsList() {
        if (timeZoneMappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timeZoneMappings_);
        } else {
          return timeZoneMappingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public int getTimeZoneMappingsCount() {
        if (timeZoneMappingsBuilder_ == null) {
          return timeZoneMappings_.size();
        } else {
          return timeZoneMappingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getTimeZoneMappings(int index) {
        if (timeZoneMappingsBuilder_ == null) {
          return timeZoneMappings_.get(index);
        } else {
          return timeZoneMappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder setTimeZoneMappings(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping value) {
        if (timeZoneMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.set(index, value);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder setTimeZoneMappings(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder builderForValue) {
        if (timeZoneMappingsBuilder_ == null) {
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          timeZoneMappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder addTimeZoneMappings(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping value) {
        if (timeZoneMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.add(value);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder addTimeZoneMappings(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping value) {
        if (timeZoneMappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.add(index, value);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder addTimeZoneMappings(
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder builderForValue) {
        if (timeZoneMappingsBuilder_ == null) {
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.add(builderForValue.build());
          onChanged();
        } else {
          timeZoneMappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder addTimeZoneMappings(
          int index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder builderForValue) {
        if (timeZoneMappingsBuilder_ == null) {
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          timeZoneMappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder addAllTimeZoneMappings(
          java.lang.Iterable<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping> values) {
        if (timeZoneMappingsBuilder_ == null) {
          ensureTimeZoneMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, timeZoneMappings_);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder clearTimeZoneMappings() {
        if (timeZoneMappingsBuilder_ == null) {
          timeZoneMappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public Builder removeTimeZoneMappings(int index) {
        if (timeZoneMappingsBuilder_ == null) {
          ensureTimeZoneMappingsIsMutable();
          timeZoneMappings_.remove(index);
          onChanged();
        } else {
          timeZoneMappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder getTimeZoneMappingsBuilder(
          int index) {
        return getTimeZoneMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder getTimeZoneMappingsOrBuilder(
          int index) {
        if (timeZoneMappingsBuilder_ == null) {
          return timeZoneMappings_.get(index);  } else {
          return timeZoneMappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public java.util.List<? extends com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder> 
           getTimeZoneMappingsOrBuilderList() {
        if (timeZoneMappingsBuilder_ != null) {
          return timeZoneMappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timeZoneMappings_);
        }
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder addTimeZoneMappingsBuilder() {
        return getTimeZoneMappingsFieldBuilder().addBuilder(
            com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder addTimeZoneMappingsBuilder(
          int index) {
        return getTimeZoneMappingsFieldBuilder().addBuilder(
            index, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .com.android.libcore.timezone.countryzones.proto.TimeZoneMapping timeZoneMappings = 4;</code>
       */
      public java.util.List<com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder> 
           getTimeZoneMappingsBuilderList() {
        return getTimeZoneMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder> 
          getTimeZoneMappingsFieldBuilder() {
        if (timeZoneMappingsBuilder_ == null) {
          timeZoneMappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder>(
                  timeZoneMappings_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          timeZoneMappings_ = null;
        }
        return timeZoneMappingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.libcore.timezone.countryzones.proto.Country)
    }

    // @@protoc_insertion_point(class_scope:com.android.libcore.timezone.countryzones.proto.Country)
    private static final com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country();
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Country>
        PARSER = new com.google.protobuf.AbstractParser<Country>() {
      @java.lang.Override
      public Country parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Country> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Country> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.Country getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeZoneMappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.android.libcore.timezone.countryzones.proto.TimeZoneMapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required string id = 1;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <code>required string id = 1;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>required string utcOffset = 2;</code>
     * @return Whether the utcOffset field is set.
     */
    boolean hasUtcOffset();
    /**
     * <code>required string utcOffset = 2;</code>
     * @return The utcOffset.
     */
    java.lang.String getUtcOffset();
    /**
     * <code>required string utcOffset = 2;</code>
     * @return The bytes for utcOffset.
     */
    com.google.protobuf.ByteString
        getUtcOffsetBytes();

    /**
     * <code>optional bool shownInPicker = 3 [default = true];</code>
     * @return Whether the shownInPicker field is set.
     */
    boolean hasShownInPicker();
    /**
     * <code>optional bool shownInPicker = 3 [default = true];</code>
     * @return The shownInPicker.
     */
    boolean getShownInPicker();

    /**
     * <code>optional uint32 priority = 4 [default = 1];</code>
     * @return Whether the priority field is set.
     */
    boolean hasPriority();
    /**
     * <code>optional uint32 priority = 4 [default = 1];</code>
     * @return The priority.
     */
    int getPriority();

    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @return A list containing the alternativeIds.
     */
    java.util.List<java.lang.String>
        getAlternativeIdsList();
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @return The count of alternativeIds.
     */
    int getAlternativeIdsCount();
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @param index The index of the element to return.
     * @return The alternativeIds at the given index.
     */
    java.lang.String getAlternativeIds(int index);
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the alternativeIds at the given index.
     */
    com.google.protobuf.ByteString
        getAlternativeIdsBytes(int index);
  }
  /**
   * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.TimeZoneMapping}
   */
  public static final class TimeZoneMapping extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.android.libcore.timezone.countryzones.proto.TimeZoneMapping)
      TimeZoneMappingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimeZoneMapping.newBuilder() to construct.
    private TimeZoneMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeZoneMapping() {
      id_ = "";
      utcOffset_ = "";
      shownInPicker_ = true;
      priority_ = 1;
      alternativeIds_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimeZoneMapping();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object id_ = "";
    /**
     * <code>required string id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UTCOFFSET_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object utcOffset_ = "";
    /**
     * <code>required string utcOffset = 2;</code>
     * @return Whether the utcOffset field is set.
     */
    @java.lang.Override
    public boolean hasUtcOffset() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required string utcOffset = 2;</code>
     * @return The utcOffset.
     */
    @java.lang.Override
    public java.lang.String getUtcOffset() {
      java.lang.Object ref = utcOffset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          utcOffset_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string utcOffset = 2;</code>
     * @return The bytes for utcOffset.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUtcOffsetBytes() {
      java.lang.Object ref = utcOffset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        utcOffset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHOWNINPICKER_FIELD_NUMBER = 3;
    private boolean shownInPicker_ = true;
    /**
     * <code>optional bool shownInPicker = 3 [default = true];</code>
     * @return Whether the shownInPicker field is set.
     */
    @java.lang.Override
    public boolean hasShownInPicker() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool shownInPicker = 3 [default = true];</code>
     * @return The shownInPicker.
     */
    @java.lang.Override
    public boolean getShownInPicker() {
      return shownInPicker_;
    }

    public static final int PRIORITY_FIELD_NUMBER = 4;
    private int priority_ = 1;
    /**
     * <code>optional uint32 priority = 4 [default = 1];</code>
     * @return Whether the priority field is set.
     */
    @java.lang.Override
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 priority = 4 [default = 1];</code>
     * @return The priority.
     */
    @java.lang.Override
    public int getPriority() {
      return priority_;
    }

    public static final int ALTERNATIVEIDS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList alternativeIds_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @return A list containing the alternativeIds.
     */
    public com.google.protobuf.ProtocolStringList
        getAlternativeIdsList() {
      return alternativeIds_;
    }
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @return The count of alternativeIds.
     */
    public int getAlternativeIdsCount() {
      return alternativeIds_.size();
    }
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @param index The index of the element to return.
     * @return The alternativeIds at the given index.
     */
    public java.lang.String getAlternativeIds(int index) {
      return alternativeIds_.get(index);
    }
    /**
     * <code>repeated string alternativeIds = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the alternativeIds at the given index.
     */
    public com.google.protobuf.ByteString
        getAlternativeIdsBytes(int index) {
      return alternativeIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUtcOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, utcOffset_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, shownInPicker_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, priority_);
      }
      for (int i = 0; i < alternativeIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, alternativeIds_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, utcOffset_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, shownInPicker_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, priority_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < alternativeIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(alternativeIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAlternativeIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping)) {
        return super.equals(obj);
      }
      com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping other = (com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasUtcOffset() != other.hasUtcOffset()) return false;
      if (hasUtcOffset()) {
        if (!getUtcOffset()
            .equals(other.getUtcOffset())) return false;
      }
      if (hasShownInPicker() != other.hasShownInPicker()) return false;
      if (hasShownInPicker()) {
        if (getShownInPicker()
            != other.getShownInPicker()) return false;
      }
      if (hasPriority() != other.hasPriority()) return false;
      if (hasPriority()) {
        if (getPriority()
            != other.getPriority()) return false;
      }
      if (!getAlternativeIdsList()
          .equals(other.getAlternativeIdsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasUtcOffset()) {
        hash = (37 * hash) + UTCOFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getUtcOffset().hashCode();
      }
      if (hasShownInPicker()) {
        hash = (37 * hash) + SHOWNINPICKER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShownInPicker());
      }
      if (hasPriority()) {
        hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getPriority();
      }
      if (getAlternativeIdsCount() > 0) {
        hash = (37 * hash) + ALTERNATIVEIDS_FIELD_NUMBER;
        hash = (53 * hash) + getAlternativeIdsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.android.libcore.timezone.countryzones.proto.TimeZoneMapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.android.libcore.timezone.countryzones.proto.TimeZoneMapping)
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.class, com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.Builder.class);
      }

      // Construct using com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = "";
        utcOffset_ = "";
        shownInPicker_ = true;
        priority_ = 1;
        alternativeIds_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getDefaultInstanceForType() {
        return com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.getDefaultInstance();
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping build() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping buildPartial() {
        com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping result = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.utcOffset_ = utcOffset_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.shownInPicker_ = shownInPicker_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.priority_ = priority_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          alternativeIds_.makeImmutable();
          result.alternativeIds_ = alternativeIds_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping) {
          return mergeFrom((com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping other) {
        if (other == com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping.getDefaultInstance()) return this;
        if (other.hasId()) {
          id_ = other.id_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasUtcOffset()) {
          utcOffset_ = other.utcOffset_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasShownInPicker()) {
          setShownInPicker(other.getShownInPicker());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (!other.alternativeIds_.isEmpty()) {
          if (alternativeIds_.isEmpty()) {
            alternativeIds_ = other.alternativeIds_;
            bitField0_ |= 0x00000010;
          } else {
            ensureAlternativeIdsIsMutable();
            alternativeIds_.addAll(other.alternativeIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasUtcOffset()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                id_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                utcOffset_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                shownInPicker_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                priority_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureAlternativeIdsIsMutable();
                alternativeIds_.add(bs);
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>required string id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string id = 1;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        id_ = getDefaultInstance().getId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>required string id = 1;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object utcOffset_ = "";
      /**
       * <code>required string utcOffset = 2;</code>
       * @return Whether the utcOffset field is set.
       */
      public boolean hasUtcOffset() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required string utcOffset = 2;</code>
       * @return The utcOffset.
       */
      public java.lang.String getUtcOffset() {
        java.lang.Object ref = utcOffset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            utcOffset_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string utcOffset = 2;</code>
       * @return The bytes for utcOffset.
       */
      public com.google.protobuf.ByteString
          getUtcOffsetBytes() {
        java.lang.Object ref = utcOffset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          utcOffset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string utcOffset = 2;</code>
       * @param value The utcOffset to set.
       * @return This builder for chaining.
       */
      public Builder setUtcOffset(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        utcOffset_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required string utcOffset = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUtcOffset() {
        utcOffset_ = getDefaultInstance().getUtcOffset();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>required string utcOffset = 2;</code>
       * @param value The bytes for utcOffset to set.
       * @return This builder for chaining.
       */
      public Builder setUtcOffsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        utcOffset_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private boolean shownInPicker_ = true;
      /**
       * <code>optional bool shownInPicker = 3 [default = true];</code>
       * @return Whether the shownInPicker field is set.
       */
      @java.lang.Override
      public boolean hasShownInPicker() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool shownInPicker = 3 [default = true];</code>
       * @return The shownInPicker.
       */
      @java.lang.Override
      public boolean getShownInPicker() {
        return shownInPicker_;
      }
      /**
       * <code>optional bool shownInPicker = 3 [default = true];</code>
       * @param value The shownInPicker to set.
       * @return This builder for chaining.
       */
      public Builder setShownInPicker(boolean value) {

        shownInPicker_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool shownInPicker = 3 [default = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearShownInPicker() {
        bitField0_ = (bitField0_ & ~0x00000004);
        shownInPicker_ = true;
        onChanged();
        return this;
      }

      private int priority_ = 1;
      /**
       * <code>optional uint32 priority = 4 [default = 1];</code>
       * @return Whether the priority field is set.
       */
      @java.lang.Override
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 priority = 4 [default = 1];</code>
       * @return The priority.
       */
      @java.lang.Override
      public int getPriority() {
        return priority_;
      }
      /**
       * <code>optional uint32 priority = 4 [default = 1];</code>
       * @param value The priority to set.
       * @return This builder for chaining.
       */
      public Builder setPriority(int value) {

        priority_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 priority = 4 [default = 1];</code>
       * @return This builder for chaining.
       */
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList alternativeIds_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureAlternativeIdsIsMutable() {
        if (!alternativeIds_.isModifiable()) {
          alternativeIds_ = new com.google.protobuf.LazyStringArrayList(alternativeIds_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @return A list containing the alternativeIds.
       */
      public com.google.protobuf.ProtocolStringList
          getAlternativeIdsList() {
        alternativeIds_.makeImmutable();
        return alternativeIds_;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @return The count of alternativeIds.
       */
      public int getAlternativeIdsCount() {
        return alternativeIds_.size();
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param index The index of the element to return.
       * @return The alternativeIds at the given index.
       */
      public java.lang.String getAlternativeIds(int index) {
        return alternativeIds_.get(index);
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the alternativeIds at the given index.
       */
      public com.google.protobuf.ByteString
          getAlternativeIdsBytes(int index) {
        return alternativeIds_.getByteString(index);
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param index The index to set the value at.
       * @param value The alternativeIds to set.
       * @return This builder for chaining.
       */
      public Builder setAlternativeIds(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAlternativeIdsIsMutable();
        alternativeIds_.set(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param value The alternativeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAlternativeIds(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAlternativeIdsIsMutable();
        alternativeIds_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param values The alternativeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllAlternativeIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureAlternativeIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, alternativeIds_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlternativeIds() {
        alternativeIds_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string alternativeIds = 5;</code>
       * @param value The bytes of the alternativeIds to add.
       * @return This builder for chaining.
       */
      public Builder addAlternativeIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureAlternativeIdsIsMutable();
        alternativeIds_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.android.libcore.timezone.countryzones.proto.TimeZoneMapping)
    }

    // @@protoc_insertion_point(class_scope:com.android.libcore.timezone.countryzones.proto.TimeZoneMapping)
    private static final com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping();
    }

    public static com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TimeZoneMapping>
        PARSER = new com.google.protobuf.AbstractParser<TimeZoneMapping>() {
      @java.lang.Override
      public TimeZoneMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TimeZoneMapping> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeZoneMapping> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.android.libcore.timezone.countryzones.proto.CountryZonesFile.TimeZoneMapping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_libcore_timezone_countryzones_proto_Country_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030country_zones_file.proto\022/com.android." +
      "libcore.timezone.countryzones.proto\"p\n\014C" +
      "ountryZones\022\023\n\013ianaVersion\030\001 \002(\t\022K\n\tcoun" +
      "tries\030\002 \003(\01328.com.android.libcore.timezo" +
      "ne.countryzones.proto.Country\"\257\001\n\007Countr" +
      "y\022\017\n\007isoCode\030\001 \002(\t\022\031\n\021defaultTimeZoneId\030" +
      "\002 \001(\t\022\034\n\024defaultTimeZoneBoost\030\003 \001(\010\022Z\n\020t" +
      "imeZoneMappings\030\004 \003(\0132@.com.android.libc" +
      "ore.timezone.countryzones.proto.TimeZone" +
      "Mapping\"z\n\017TimeZoneMapping\022\n\n\002id\030\001 \002(\t\022\021" +
      "\n\tutcOffset\030\002 \002(\t\022\033\n\rshownInPicker\030\003 \001(\010" +
      ":\004true\022\023\n\010priority\030\004 \001(\r:\0011\022\026\n\016alternati" +
      "veIds\030\005 \003(\tB3\n/com.android.libcore.timez" +
      "one.countryzones.protoP\000"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_libcore_timezone_countryzones_proto_CountryZones_descriptor,
        new java.lang.String[] { "IanaVersion", "Countries", });
    internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_android_libcore_timezone_countryzones_proto_Country_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_libcore_timezone_countryzones_proto_Country_descriptor,
        new java.lang.String[] { "IsoCode", "DefaultTimeZoneId", "DefaultTimeZoneBoost", "TimeZoneMappings", });
    internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_android_libcore_timezone_countryzones_proto_TimeZoneMapping_descriptor,
        new java.lang.String[] { "Id", "UtcOffset", "ShownInPicker", "Priority", "AlternativeIds", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
